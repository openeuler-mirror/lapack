OBJCOPY = objcopy

ifndef SYMBOLPREFIX
SYMBOLPREFIX =
endif

clean:
	rm -f *.o libcblas.a libcblas.so*

ERRHAND= cblas_globals.o cblas_xerbla.o xerbla.o

SLEV1= cblas_srotg.o cblas_srotmg.o cblas_srot.o cblas_srotm.o \
       cblas_sswap.o cblas_sscal.o  cblas_scopy.o cblas_saxpy.o \
       cblas_sdot.o  cblas_sdsdot.o cblas_snrm2.o cblas_sasum.o \
       cblas_isamax.o sdotsub.o sdsdotsub.o snrm2sub.o sasumsub.o \
       isamaxsub.o

DLEV1= cblas_drotg.o cblas_drotmg.o cblas_drot.o cblas_drotm.o \
       cblas_dswap.o cblas_dscal.o  cblas_dcopy.o cblas_daxpy.o \
       cblas_ddot.o  cblas_dsdot.o cblas_dnrm2.o cblas_dasum.o \
       cblas_idamax.o ddotsub.f dsdotsub.o dnrm2sub.o \
       dasumsub.o idamaxsub.o

CLEV1= cblas_cswap.o cblas_cscal.o cblas_csscal.o cblas_ccopy.o \
       cblas_caxpy.o cblas_cdotu_sub.o cblas_cdotc_sub.o \
       cblas_icamax.o cdotcsub.o cdotusub.o icamaxsub.o

ZLEV1= cblas_zswap.o cblas_zscal.o cblas_zdscal.o cblas_zcopy.o \
       cblas_zaxpy.o cblas_zdotu_sub.o cblas_zdotc_sub.o cblas_dznrm2.o \
       cblas_dzasum.o cblas_izamax.o zdotcsub.o zdotusub.o \
       dzasumsub.o dznrm2sub.o izamaxsub.o

SCLEV1= cblas_scasum.o scasumsub.o cblas_scnrm2.o scnrm2sub.o

SLEV2= cblas_sgemv.o cblas_sgbmv.o cblas_sger.o  cblas_ssbmv.o cblas_sspmv.o \
       cblas_sspr.o  cblas_sspr2.o cblas_ssymv.o cblas_ssyr.o  cblas_ssyr2.o \
       cblas_stbmv.o cblas_stbsv.o cblas_stpmv.o cblas_stpsv.o cblas_strmv.o \
       cblas_strsv.o

DLEV2= cblas_dgemv.o cblas_dgbmv.o cblas_dger.o  cblas_dsbmv.o cblas_dspmv.o \
       cblas_dspr.o  cblas_dspr2.o cblas_dsymv.o cblas_dsyr.o  cblas_dsyr2.o \
       cblas_dtbmv.o cblas_dtbsv.o cblas_dtpmv.o cblas_dtpsv.o cblas_dtrmv.o \
       cblas_dtrsv.o

CLEV2= cblas_cgemv.o cblas_cgbmv.o cblas_chemv.o cblas_chbmv.o cblas_chpmv.o \
        cblas_ctrmv.o cblas_ctbmv.o cblas_ctpmv.o cblas_ctrsv.o cblas_ctbsv.o \
        cblas_ctpsv.o cblas_cgeru.o cblas_cgerc.o cblas_cher.o  cblas_cher2.o \
        cblas_chpr.o  cblas_chpr2.o

ZLEV2= cblas_zgemv.o cblas_zgbmv.o cblas_zhemv.o cblas_zhbmv.o cblas_zhpmv.o \
       cblas_ztrmv.o cblas_ztbmv.o cblas_ztpmv.o cblas_ztrsv.o cblas_ztbsv.o \
       cblas_ztpsv.o cblas_zgeru.o cblas_zgerc.o cblas_zher.o  cblas_zher2.o \
       cblas_zhpr.o  cblas_zhpr2.o

SLEV3= cblas_sgemm.o cblas_ssymm.o cblas_ssyrk.o cblas_ssyr2k.o cblas_strmm.o \
       cblas_strsm.o

DLEV3= cblas_dgemm.o cblas_dsymm.o cblas_dsyrk.o cblas_dsyr2k.o cblas_dtrmm.o \
       cblas_dtrsm.o

CLEV3= cblas_cgemm.o cblas_csymm.o cblas_chemm.o cblas_cherk.o \
       cblas_cher2k.o cblas_ctrmm.o cblas_ctrsm.o cblas_csyrk.o \
       cblas_csyr2k.o

ZLEV3= cblas_zgemm.o cblas_zsymm.o cblas_zhemm.o cblas_zherk.o \
       cblas_zher2k.o cblas_ztrmm.o cblas_ztrsm.o cblas_zsyrk.o \
       cblas_zsyr2k.o

OBJS= $(SLEV1) $(DLEV1) $(CLEV1) $(ZLEV1) $(SCLEV1) $(SLEV2) $(DLEV2) $(CLEV2) \
      $(ZLEV2) $(SLEV3) $(DLEV3) $(CLEV3) $(ZLEV3) $(ERRHAND)

static: $(OBJS)
ifeq "$(SYMBOLPREFIX)" ""
	ar ruv libcblas.a $(OBJS)
	ranlib libcblas.a
else
	ar ruv libcblas$(SYMBOLPREFIX).a $(OBJS)
	ranlib libcblas$(SYMBOLPREFIX).a
	for i in `nm libcblas$(SYMBOLPREFIX).a |grep " T " | awk '{print $$3}'`; do echo "$$i" "64_$$i"; done > cblas-static-prefix.def.dirty
	sort -n cblas-static-prefix.def.dirty | uniq > cblas-static-prefix.def
	$(OBJCOPY) --redefine-syms cblas-static-prefix.def libcblas$(SYMBOLPREFIX).a libcblas$(SYMBOLPREFIX).a.fixed
	rm -rf libcblas$(SYMBOLPREFIX).a
	mv libcblas$(SYMBOLPREFIX).a.fixed libcblas$(SYMBOLPREFIX).a
endif

shared: $(OBJS)
ifeq "$(SYMBOLPREFIX)" ""
	# No renaming needed
	cc $(CFLAGS) -shared -Wl,-soname,libcblas.so.@SHORTVER@ -o libcblas.so.@LONGVER@ $(OBJS) $(LDFLAGS) -L../../ -lblas -lm -lgfortran -lc
else
	cc $(CFLAGS) -shared -Wl,-soname,libcblas$(SYMBOLPREFIX).so.@SHORTVER@ -o libcblas$(SYMBOLPREFIX).so.@LONGVER@ $(OBJS) $(LDFLAGS) -L../.. -lblas -lm -lgfortran -lc
	# generate a list of all symbols in shared library and rename with SYMBOLPREFIX
	for i in `readelf -Ws libcblas$(SYMBOLPREFIX).so.@LONGVER@ | awk '{print $$8}' | grep -v GLIBC |grep -v GFORTRAN |grep -v "Name" `; do echo "$$i" "64_$$i"; done > cblas-prefix.def.dirty
	sort -n cblas-prefix.def.dirty | uniq > cblas-prefix.def
	$(OBJCOPY) --redefine-syms cblas-prefix.def libcblas$(SYMBOLPREFIX).so.@LONGVER@ libcblas$(SYMBOLPREFIX).so.@LONGVER@.fixed
	rm -rf libcblas$(SYMBOLPREFIX).so.@LONGVER@
	mv libcblas$(SYMBOLPREFIX).so.@LONGVER@.fixed libcblas$(SYMBOLPREFIX).so.@LONGVER@
endif

